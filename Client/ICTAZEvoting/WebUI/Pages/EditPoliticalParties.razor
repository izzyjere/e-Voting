@page "/politicalparties"

@using ICTAZEVoting.Shared
@using System.Linq
@using System
@using ICTAZEVoting.Shared.Models
@inject MudBlazor.ISnackbar snackBar
@inject IJSRuntime JsRuntime

<MudCard Elevation="25">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">Add / Edit Political Party</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudGrid>
            <MudItem xs="12" sm="6" md="4" lg="3">
                <Animate Animation="Animations.FlipUp" Duration="TimeSpan.FromSeconds(0.5)">
                    <MudTextField @bind-Value="politicalParty.Name" Label="Name" Variant="Variant.Outlined" Margin="Margin.Normal"></MudTextField>
                </Animate>
            </MudItem>

            <MudItem xs="12" sm="6" md="4" lg="3">
                <Animate Animation="Animations.FlipUp" Duration="TimeSpan.FromSeconds(0.5)">
                    <MudTextField @bind-Value="politicalParty.Slogan" Label="Slogan" Variant="Variant.Outlined" Margin="Margin.Normal"></MudTextField>
                </Animate>
            </MudItem>

            <MudItem xs="12" sm="6" md="4" lg="3">
                <Animate Animation="Animations.FlipUp" Duration="TimeSpan.FromSeconds(0.5)">
                    <MudTextField Lines="4" @bind-Value="politicalParty.Manifesto" Label="Manifesto" Variant="Variant.Outlined" Margin="Margin.Normal"></MudTextField>
                </Animate>
            </MudItem>
            <MudItem xs="12" sm="6" md="4" lg="3">
                <MudButton HtmlTag="label"
                           Variant="Variant.Filled"
                           Color="Color.Info"
                           StartIcon="@Icons.Filled.CloudUpload"
                           for="fileInput">
                    Upload Party Logo
                </MudButton>
            </MudItem>
        </MudGrid>
        <MudButton Variant="Variant.Filled" Color="Color.Info">Save Political Party</MudButton>
    </MudCardContent>
</MudCard>

<Animate Animation="Animations.FlipUp" Duration="TimeSpan.FromSeconds(0.5)">
    <MudTable Style="color: white" Elevation="25" Items="politicalparties">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Election Types</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="searchString" Placeholder="Search for Political Parties..." Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Rounded.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Election Type</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Election Type">@context.Name</MudTd>
            <MudTd DataLabel="Payments">
                @if (context.Candidates.Any())
                {
                    foreach (var candidate in context.Candidates)
                    {
                        <MudSelectItem T="Guid" Value="@candidate.Id">@candidate.PersonalDetails.FirstName @candidate.PersonalDetails.LastName</MudSelectItem>
                    }
                }
            </MudTd>
            <MudTd DataLabel="">
                <MudFab @onclick="@(()=>Edit(@context.Id))" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" IconSize="Size.Small" />
                <MudFab @onclick="@(()=>Delete(@context.Id))" Color="Color.Secondary" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" IconSize="Size.Small" />
            </MudTd>
        </RowTemplate>
    </MudTable>
</Animate>

<MudScrollToTop>
    <MudFab Color="Color.Tertiary" Icon="@Icons.Filled.ArrowCircleUp" />
</MudScrollToTop>
<MudMessageBox @ref="mbox" Title="Warning" CancelText="Cancel">
    <MessageContent>
        Deleting can <b><i>not</i></b> be undone!
    </MessageContent>
    <YesButton>
        <MudButton Variant="Variant.Filled" Color="Color.Error" StartIcon="@Icons.Material.Filled.DeleteForever">Delete!</MudButton>
    </YesButton>
</MudMessageBox>


@code {
    private string searchString = "";
    private PoliticalParty politicalParty = new PoliticalParty();
    private List<PoliticalParty> politicalparties = new List<PoliticalParty>();

    protected override async Task OnInitializedAsync()
    {

    }

    private void Update(PoliticalParty politicalParty)
    {
        Update(politicalParty);
        politicalParty = new PoliticalParty();
        snackBar.Add("Political Party Saved.", Severity.Success);
    }
    private void Edit(Guid id)
    {
        politicalParty = politicalparties.FirstOrDefault(c => c.Id == id);
    }

    MudMessageBox mbox { get; set; }
    private async Task Delete(Guid id)
    {
        bool? confirmed = await mbox.Show();
        if (confirmed == true)
        {
            await Delete(id);
            snackBar.Add("Political Party Deleted.", Severity.Success);
        }
    }

    IList<IBrowserFile> files = new List<IBrowserFile>();
    private void UploadFiles(InputFileChangeEventArgs e)
    {
        foreach (var file in e.GetMultipleFiles())
        {
            files.Add(file);
        }
        //TODO upload the files to the server
    }
}