@inherits LayoutComponentBase
<PageTitle>ICTAZ E-Voting System</PageTitle>
<MudLayout>
    <MudAppBar Elevation="25" Color="Color.Default">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" OnClick="@((e) => DrawerToggle())" Class="ml-3" />
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <MudImage Src="images/logo.png" Height="70" Width="80" />
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.Xs">
            <MudText Typo="Typo.h6" Class="ml-4">ICTAZ E-Voting System</MudText>
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.Xs" Invert="true">
            <MudText Typo="Typo.subtitle2">ICTAZEVoting</MudText>
        </MudHidden>
        <MudSpacer />
        <MudMenu Direction="Direction.Left" OffsetX="true" Dense="true" Class="mt-1 ml-4">
            <ActivatorContent>
                <MudAvatar Image="@Profile.ProfilePicture" />
            </ActivatorContent>
            <ChildContent>
                <PersonCard Profile="@Profile" Style="background-color: var(--mud-palette-drawer-background);color: var(--mud-palette-drawer-text);" />
                <MudDivider Class="mb-2" />
                <MudListItem Text="Account" Icon="@Icons.Material.Outlined.Person" Href="/personal/account" />
                <MudListItem Text="Logout" Icon="@Icons.Material.Outlined.Login" Href="/pages/authentication/login" />
            </ChildContent>
        </MudMenu>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="25" ClipMode="DrawerClipMode.Docked">
        <NavMenu Profile="@Profile" />
    </MudDrawer>
    <MudMainContent>
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <MudToolBar DisableGutters="true">
                
                @*<MudBreadcrumbs Items="_items"></MudBreadcrumbs>
                <MudSpacer />*@
            </MudToolBar>
        </MudHidden>
        <MudContainer MaxWidth="MaxWidth.False" Class="mt-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>
<MudScrollToTop>
    <MudFab Color="Color.Tertiary" Icon="@Icons.Filled.ArrowCircleUp" />
</MudScrollToTop>

@code {


    public bool _drawerOpen = true;
    UserProfileResponse Profile = new();
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    ClaimsPrincipal claimsPrincipal = new();
    [CascadingParameter] Task<AuthenticationState> authenticationState { get; set; }
 
    protected override async Task OnInitializedAsync()
    {
        claimsPrincipal = (await authenticationState).User;
        if (claimsPrincipal.Identity.IsAuthenticated)
        {  
            var req = new UserProfileRequest {Id = claimsPrincipal.GetUserId()};
            var request = await httpClient.PostAsJsonAsync($"{ApiEndpoints.UserProfile}", req);            
            var r = await request.ToResult<UserProfileResponse>();
            if(r.Succeeded)
            {
                Profile = r.Data;
            }

        }
    }
    //private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    //{
    //    new BreadcrumbItem("Personal", href: "#"),
    //    new BreadcrumbItem("Dashboard", href: "#"),
    //};
}